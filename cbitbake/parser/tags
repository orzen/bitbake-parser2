!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APPEND_ASSIGN	bitbake.tab.c	/^    APPEND_ASSIGN = 270,$/;"	e	enum:yytokentype	file:
APPEND_ASSIGN	bitbake.tab.h	/^    APPEND_ASSIGN = 270,$/;"	e	enum:yytokentype
ASSIGN	bitbake.tab.c	/^    ASSIGN = 274,$/;"	e	enum:yytokentype	file:
ASSIGN	bitbake.tab.h	/^    ASSIGN = 274,$/;"	e	enum:yytokentype
BEGIN	lex.yy.c	156;"	d	file:
BISON_GEN	Makefile	/^BISON_GEN = bitbake.tab.c bitbake.tab.h$/;"	m
BISON_SRC	Makefile	/^BISON_SRC = bitbake.y$/;"	m
BLOCK_END	bitbake.tab.c	/^    BLOCK_END = 277$/;"	e	enum:yytokentype	file:
BLOCK_END	bitbake.tab.h	/^    BLOCK_END = 277$/;"	e	enum:yytokentype
COLON_ASSIGN	bitbake.tab.c	/^    COLON_ASSIGN = 271,$/;"	e	enum:yytokentype	file:
COLON_ASSIGN	bitbake.tab.h	/^    COLON_ASSIGN = 271,$/;"	e	enum:yytokentype
DOUBLE_QUOTE	bitbake.tab.c	/^    DOUBLE_QUOTE = 259,$/;"	e	enum:yytokentype	file:
DOUBLE_QUOTE	bitbake.tab.h	/^    DOUBLE_QUOTE = 259,$/;"	e	enum:yytokentype
ECHO	lex.yy.c	772;"	d	file:
ENSURE	utils.c	/^ENSURE(conf)$/;"	f
ENSURE	utils.c	27;"	d	file:
ENSURE	utils.c	44;"	d	file:
EOB_ACT_CONTINUE_SCAN	lex.yy.c	206;"	d	file:
EOB_ACT_END_OF_FILE	lex.yy.c	207;"	d	file:
EOB_ACT_LAST_MATCH	lex.yy.c	208;"	d	file:
EOL	bitbake.tab.c	/^    EOL = 275,$/;"	e	enum:yytokentype	file:
EOL	bitbake.tab.h	/^    EOL = 275,$/;"	e	enum:yytokentype
EXIT_SUCCESS	bitbake.tab.c	312;"	d	file:
EXIT_SUCCESS	bitbake.tab.c	340;"	d	file:
EXPORT	bitbake.tab.c	/^    EXPORT = 265,$/;"	e	enum:yytokentype	file:
EXPORT	bitbake.tab.h	/^    EXPORT = 265,$/;"	e	enum:yytokentype
FLEXINT_H	lex.yy.c	53;"	d	file:
FLEX_BETA	lex.yy.c	21;"	d	file:
FLEX_DEBUG	lex.yy.c	416;"	d	file:
FLEX_SCANNER	lex.yy.c	16;"	d	file:
GENERATED	Makefile	/^GENERATED=$(BISON_GEN) $(LEX_GEN)$/;"	m
INCLUDE	bitbake.tab.c	/^    INCLUDE = 260,$/;"	e	enum:yytokentype	file:
INCLUDE	bitbake.tab.h	/^    INCLUDE = 260,$/;"	e	enum:yytokentype
INHERIT	bitbake.tab.c	/^    INHERIT = 261,$/;"	e	enum:yytokentype	file:
INHERIT	bitbake.tab.h	/^    INHERIT = 261,$/;"	e	enum:yytokentype
INITIAL	lex.yy.c	648;"	d	file:
INT16_MAX	lex.yy.c	95;"	d	file:
INT16_MIN	lex.yy.c	86;"	d	file:
INT32_MAX	lex.yy.c	98;"	d	file:
INT32_MIN	lex.yy.c	89;"	d	file:
INT8_MAX	lex.yy.c	92;"	d	file:
INT8_MIN	lex.yy.c	83;"	d	file:
LAZYQUES_ASSIGN	bitbake.tab.c	/^    LAZYQUES_ASSIGN = 273,$/;"	e	enum:yytokentype	file:
LAZYQUES_ASSIGN	bitbake.tab.h	/^    LAZYQUES_ASSIGN = 273,$/;"	e	enum:yytokentype
LEX_GEN	Makefile	/^LEX_GEN = lex.yy.c$/;"	m
LEX_SRC	Makefile	/^LEX_SRC = bitbake.l$/;"	m
PKGS	Makefile	/^PKGS = glib-2.0$/;"	m
POSTDOT_ASSIGN	bitbake.tab.c	/^    POSTDOT_ASSIGN = 268,$/;"	e	enum:yytokentype	file:
POSTDOT_ASSIGN	bitbake.tab.h	/^    POSTDOT_ASSIGN = 268,$/;"	e	enum:yytokentype
PREDOT_ASSIGN	bitbake.tab.c	/^    PREDOT_ASSIGN = 267,$/;"	e	enum:yytokentype	file:
PREDOT_ASSIGN	bitbake.tab.h	/^    PREDOT_ASSIGN = 267,$/;"	e	enum:yytokentype
PREPEND_ASSIGN	bitbake.tab.c	/^    PREPEND_ASSIGN = 269,$/;"	e	enum:yytokentype	file:
PREPEND_ASSIGN	bitbake.tab.h	/^    PREPEND_ASSIGN = 269,$/;"	e	enum:yytokentype
PROG	Makefile	/^PROG = cbitbake$/;"	m
PYTHON	bitbake.tab.c	/^    PYTHON = 266,$/;"	e	enum:yytokentype	file:
PYTHON	bitbake.tab.h	/^    PYTHON = 266,$/;"	e	enum:yytokentype
QUES_ASSIGN	bitbake.tab.c	/^    QUES_ASSIGN = 272,$/;"	e	enum:yytokentype	file:
QUES_ASSIGN	bitbake.tab.h	/^    QUES_ASSIGN = 272,$/;"	e	enum:yytokentype
REJECT	lex.yy.c	626;"	d	file:
REQUIRE	bitbake.tab.c	/^    REQUIRE = 262,$/;"	e	enum:yytokentype	file:
REQUIRE	bitbake.tab.h	/^    REQUIRE = 262,$/;"	e	enum:yytokentype
SINGLE_QUOTE	bitbake.tab.c	/^    SINGLE_QUOTE = 258,$/;"	e	enum:yytokentype	file:
SINGLE_QUOTE	bitbake.tab.h	/^    SINGLE_QUOTE = 258,$/;"	e	enum:yytokentype
SIZE_MAX	lex.yy.c	111;"	d	file:
SRCS	Makefile	/^SRCS = $(BISON_GEN) $(LEX_GEN) args.c files.c parser_types.c utils.c utils2.c$/;"	m
STRING	bitbake.tab.c	/^    STRING = 264,$/;"	e	enum:yytokentype	file:
STRING	bitbake.tab.h	/^    STRING = 264,$/;"	e	enum:yytokentype
STRING_CONTINUATION	bitbake.tab.c	/^    STRING_CONTINUATION = 276,$/;"	e	enum:yytokentype	file:
STRING_CONTINUATION	bitbake.tab.h	/^    STRING_CONTINUATION = 276,$/;"	e	enum:yytokentype
TYPE_NEW	parser_types.c	/^TYPE_NEW(conf)$/;"	f
TYPE_NEW	parser_types.c	16;"	d	file:
TYPE_NEW	parser_types.c	7;"	d	file:
UINT16_MAX	lex.yy.c	104;"	d	file:
UINT32_MAX	lex.yy.c	107;"	d	file:
UINT8_MAX	lex.yy.c	101;"	d	file:
WORD	bitbake.tab.c	/^    WORD = 263,$/;"	e	enum:yytokentype	file:
WORD	bitbake.tab.h	/^    WORD = 263,$/;"	e	enum:yytokentype
YYABORT	bitbake.tab.c	629;"	d	file:
YYACCEPT	bitbake.tab.c	628;"	d	file:
YYBACKUP	bitbake.tab.c	635;"	d	file:
YYBISON	bitbake.tab.c	44;"	d	file:
YYBISON_VERSION	bitbake.tab.c	47;"	d	file:
YYCASE_	bitbake.tab.c	976;"	d	file:
YYCASE_	bitbake.tab.c	986;"	d	file:
YYCOPY	bitbake.tab.c	404;"	d	file:
YYCOPY	bitbake.tab.c	407;"	d	file:
YYCOPY_NEEDED	bitbake.tab.c	379;"	d	file:
YYDEBUG	bitbake.tab.c	117;"	d	file:
YYDEBUG	bitbake.tab.h	37;"	d
YYDPRINTF	bitbake.tab.c	666;"	d	file:
YYDPRINTF	bitbake.tab.c	781;"	d	file:
YYEMPTY	bitbake.tab.c	625;"	d	file:
YYEOF	bitbake.tab.c	626;"	d	file:
YYERRCODE	bitbake.tab.c	654;"	d	file:
YYERROR	bitbake.tab.c	630;"	d	file:
YYERROR_VERBOSE	bitbake.tab.c	105;"	d	file:
YYERROR_VERBOSE	bitbake.tab.c	106;"	d	file:
YYERROR_VERBOSE	bitbake.tab.c	108;"	d	file:
YYFINAL	bitbake.tab.c	420;"	d	file:
YYFPRINTF	bitbake.tab.c	663;"	d	file:
YYFREE	bitbake.tab.c	350;"	d	file:
YYINITDEPTH	bitbake.tab.c	790;"	d	file:
YYLAST	bitbake.tab.c	422;"	d	file:
YYMALLOC	bitbake.tab.c	344;"	d	file:
YYMAXDEPTH	bitbake.tab.c	801;"	d	file:
YYMAXUTOK	bitbake.tab.c	436;"	d	file:
YYNNTS	bitbake.tab.c	427;"	d	file:
YYNRULES	bitbake.tab.c	429;"	d	file:
YYNSTATES	bitbake.tab.c	431;"	d	file:
YYNTOKENS	bitbake.tab.c	425;"	d	file:
YYPACT_NINF	bitbake.tab.c	513;"	d	file:
YYPOPSTACK	bitbake.tab.c	1136;"	d	file:
YYPULL	bitbake.tab.c	59;"	d	file:
YYPURE	bitbake.tab.c	53;"	d	file:
YYPUSH	bitbake.tab.c	56;"	d	file:
YYRECOVERING	bitbake.tab.c	633;"	d	file:
YYSIZE_MAXIMUM	bitbake.tab.c	223;"	d	file:
YYSIZE_T	bitbake.tab.c	212;"	d	file:
YYSIZE_T	bitbake.tab.c	214;"	d	file:
YYSIZE_T	bitbake.tab.c	217;"	d	file:
YYSIZE_T	bitbake.tab.c	219;"	d	file:
YYSKELETON_NAME	bitbake.tab.c	50;"	d	file:
YYSTACK_ALLOC	bitbake.tab.c	298;"	d	file:
YYSTACK_ALLOC	bitbake.tab.c	302;"	d	file:
YYSTACK_ALLOC	bitbake.tab.c	307;"	d	file:
YYSTACK_ALLOC	bitbake.tab.c	330;"	d	file:
YYSTACK_ALLOC_MAXIMUM	bitbake.tab.c	327;"	d	file:
YYSTACK_ALLOC_MAXIMUM	bitbake.tab.c	333;"	d	file:
YYSTACK_BYTES	bitbake.tab.c	375;"	d	file:
YYSTACK_FREE	bitbake.tab.c	321;"	d	file:
YYSTACK_FREE	bitbake.tab.c	331;"	d	file:
YYSTACK_GAP_MAXIMUM	bitbake.tab.c	371;"	d	file:
YYSTACK_RELOCATE	bitbake.tab.c	386;"	d	file:
YYSTATE	lex.yy.c	162;"	d	file:
YYSTYPE	bitbake.tab.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	bitbake.tab.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE	bitbake.tab.h	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	bitbake.tab.h	/^union YYSTYPE$/;"	u
YYSTYPE_IS_DECLARED	bitbake.tab.c	168;"	d	file:
YYSTYPE_IS_DECLARED	bitbake.tab.h	88;"	d
YYSTYPE_IS_TRIVIAL	bitbake.tab.c	167;"	d	file:
YYSTYPE_IS_TRIVIAL	bitbake.tab.h	87;"	d
YYTABLES_NAME	lex.yy.c	2316;"	d	file:
YYTABLE_NINF	bitbake.tab.c	518;"	d	file:
YYTERROR	bitbake.tab.c	653;"	d	file:
YYTOKENTYPE	bitbake.tab.c	125;"	d	file:
YYTOKENTYPE	bitbake.tab.h	45;"	d
YYTRANSLATE	bitbake.tab.c	438;"	d	file:
YYUNDEFTOK	bitbake.tab.c	435;"	d	file:
YYUSE	bitbake.tab.c	266;"	d	file:
YYUSE	bitbake.tab.c	268;"	d	file:
YY_	bitbake.tab.c	229;"	d	file:
YY_	bitbake.tab.c	233;"	d	file:
YY_ATTRIBUTE	bitbake.tab.c	241;"	d	file:
YY_ATTRIBUTE	bitbake.tab.c	243;"	d	file:
YY_ATTRIBUTE_PURE	bitbake.tab.c	248;"	d	file:
YY_ATTRIBUTE_UNUSED	bitbake.tab.c	252;"	d	file:
YY_AT_BOL	lex.yy.c	408;"	d	file:
YY_BREAK	lex.yy.c	874;"	d	file:
YY_BUFFER_EOF_PENDING	lex.yy.c	312;"	d	file:
YY_BUFFER_NEW	lex.yy.c	300;"	d	file:
YY_BUFFER_NORMAL	lex.yy.c	301;"	d	file:
YY_BUFFER_STATE	lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	lex.yy.c	176;"	d	file:
YY_BUF_SIZE	lex.yy.c	178;"	d	file:
YY_CHAR	lex.yy.c	/^typedef flex_uint8_t YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	lex.yy.c	336;"	d	file:
YY_CURRENT_BUFFER_LVALUE	lex.yy.c	342;"	d	file:
YY_DECL	lex.yy.c	859;"	d	file:
YY_DECL_IS_OURS	lex.yy.c	854;"	d	file:
YY_DO_BEFORE_ACTION	lex.yy.c	446;"	d	file:
YY_END_OF_BUFFER	lex.yy.c	456;"	d	file:
YY_END_OF_BUFFER_CHAR	lex.yy.c	167;"	d	file:
YY_EXIT_FAILURE	lex.yy.c	2083;"	d	file:
YY_EXTRA_TYPE	lex.yy.c	663;"	d	file:
YY_FATAL_ERROR	lex.yy.c	833;"	d	file:
YY_FLEX_MAJOR_VERSION	lex.yy.c	17;"	d	file:
YY_FLEX_MINOR_VERSION	lex.yy.c	18;"	d	file:
YY_FLEX_SUBMINOR_VERSION	lex.yy.c	19;"	d	file:
YY_FLUSH_BUFFER	lex.yy.c	377;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	bitbake.tab.c	273;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	bitbake.tab.c	283;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	bitbake.tab.c	277;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	bitbake.tab.c	284;"	d	file:
YY_INITIAL_VALUE	bitbake.tab.c	280;"	d	file:
YY_INITIAL_VALUE	bitbake.tab.c	287;"	d	file:
YY_INPUT	lex.yy.c	782;"	d	file:
YY_INT_ALIGNED	lex.yy.c	4;"	d	file:
YY_LESS_LINENO	lex.yy.c	217;"	d	file:
YY_LINENO_REWIND_TO	lex.yy.c	224;"	d	file:
YY_LOCATION_PRINT	bitbake.tab.c	674;"	d	file:
YY_MORE_ADJ	lex.yy.c	628;"	d	file:
YY_NEW_FILE	lex.yy.c	166;"	d	file:
YY_NULL	lex.yy.c	135;"	d	file:
YY_NULLPTR	bitbake.tab.c	97;"	d	file:
YY_NULLPTR	bitbake.tab.c	99;"	d	file:
YY_NUM_RULES	lex.yy.c	455;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	760;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	762;"	d	file:
YY_REDUCE_PRINT	bitbake.tab.c	771;"	d	file:
YY_REDUCE_PRINT	bitbake.tab.c	784;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	lex.yy.c	629;"	d	file:
YY_RULE_SETUP	lex.yy.c	878;"	d	file:
YY_SC_TO_UI	lex.yy.c	142;"	d	file:
YY_SKIP_YYWRAP	lex.yy.c	414;"	d	file:
YY_STACK_PRINT	bitbake.tab.c	740;"	d	file:
YY_STACK_PRINT	bitbake.tab.c	783;"	d	file:
YY_START	lex.yy.c	161;"	d	file:
YY_START_STACK_INCR	lex.yy.c	827;"	d	file:
YY_STATE_BUF_SIZE	lex.yy.c	184;"	d	file:
YY_STATE_EOF	lex.yy.c	164;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	lex.yy.c	248;"	d	file:
YY_SYMBOL_PRINT	bitbake.tab.c	678;"	d	file:
YY_SYMBOL_PRINT	bitbake.tab.c	782;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	lex.yy.c	187;"	d	file:
YY_TYPEDEF_YY_SIZE_T	lex.yy.c	192;"	d	file:
YY_USER_ACTION	lex.yy.c	869;"	d	file:
YY_YY_BITBAKE_TAB_H_INCLUDED	bitbake.tab.c	114;"	d	file:
YY_YY_BITBAKE_TAB_H_INCLUDED	bitbake.tab.h	34;"	d
_ARGS_H_	args.h	2;"	d
_FILES_H_	files.h	2;"	d
_Noreturn	bitbake.tab.c	258;"	d	file:
_Noreturn	bitbake.tab.c	260;"	d	file:
_PARSER_TYPES_H_	parser_types.h	2;"	d
_UTILS2_H_	utils2.h	2;"	d
_UTILS_H_	utils.h	2;"	d
__STDC_LIMIT_MACROS	lex.yy.c	63;"	d	file:
_cbb_fail	utils.c	/^void _cbb_fail(const gchar *format, ...) {$/;"	f
add_int	utils2.c	/^GHashTable* add_int(GHashTable *table, const gchar *key, gint val) {$/;"	f
add_str	utils2.c	/^GHashTable* add_str(GHashTable *table, const gchar *key, const gchar *val) {$/;"	f
alloca	bitbake.tab.c	305;"	d	file:
append_assign	parser_types.h	/^	append_assign,$/;"	e	enum:assign_op
append_entry	utils.c	/^void append_entry() {$/;"	f
arg_usage	args.c	/^static char *arg_usage = "ARG1 [RECIPES...]";$/;"	v	file:
assign	parser_types.h	/^	assign$/;"	e	enum:assign_op
assign_op	bitbake.y	/^assign_op:$/;"	l
assign_op	parser_types.h	/^enum assign_op {$/;"	g
block	parser_types.h	/^	block = 0,$/;"	e	enum:parser_type
block_expr	bitbake.y	/^block_expr:$/;"	l
block_set	utils2.c	/^void block_set(GHashTable *table,$/;"	f
block_set2	utils.c	/^void block_set2(const gchar *name, const gchar *expr, gboolean python) {$/;"	f
block_stmt	bitbake.y	/^block_stmt:$/;"	l
cbb_block_s	parser_types.h	/^struct cbb_block_s {$/;"	s
cbb_block_s_free	parser_types.c	/^void cbb_block_s_free(struct cbb_block_s *block) {$/;"	f
cbb_block_s_print	parser_types.c	/^void cbb_block_s_print(struct cbb_block_s *block) {$/;"	f
cbb_conf_s	parser_types.h	/^struct cbb_conf_s {$/;"	s
cbb_conf_s_print	parser_types.c	/^void cbb_conf_s_print(struct cbb_conf_s *conf) {$/;"	f
cbb_fail	utils.c	15;"	d	file:
cbb_fail	utils.h	6;"	d
cbb_gen_s	parser_types.h	/^struct cbb_gen_s {$/;"	s
cbb_gen_s_free	parser_types.c	/^void cbb_gen_s_free(struct cbb_gen_s *gen) {$/;"	f
cbb_gen_s_print	parser_types.c	/^void cbb_gen_s_print(struct cbb_gen_s *gen) {$/;"	f
cbb_is_regular_file	args.c	/^int cbb_is_regular_file(const char *file_path) {$/;"	f
cbb_kw_s	parser_types.h	/^struct cbb_kw_s {$/;"	s
cbb_kw_s_free	parser_types.c	/^void cbb_kw_s_free(struct cbb_kw_s *kw) {$/;"	f
cbb_kw_s_print	parser_types.c	/^void cbb_kw_s_print(struct cbb_kw_s *kw) {$/;"	f
cbb_open_file	args.c	/^int cbb_open_file(const char *file_path, FILE **fd) {$/;"	f
cbb_parse	parser.c	/^cbb_parse() {$/;"	f
cbitbake_email	args.c	/^const char *cbitbake_email = "mattias.hansson@axis.com";$/;"	v
cbitbake_version	args.c	/^const char *cbitbake_version = "cbitbake 0.0.1";$/;"	v
col_num	lex.yy.c	/^gint col_num = 0;$/;"	v
colon_assign	parser_types.h	/^	colon_assign,$/;"	e	enum:assign_op
conf	parser_types.h	/^	conf,$/;"	e	enum:parser_type
conf_expr	bitbake.y	/^conf_expr:$/;"	l
conf_set	utils2.c	/^void conf_set(GHashTable *table,$/;"	f
conf_stmt	bitbake.y	/^conf_stmt:$/;"	l
count	lex.yy.c	/^void count() {$/;"	f
cur_block	bitbake.tab.c	/^struct cbb_block_s *cur_block;$/;"	v	typeref:struct:cbb_block_s
cur_conf	bitbake.tab.c	/^struct cbb_conf_s *cur_conf;$/;"	v	typeref:struct:cbb_conf_s
cur_gen	bitbake.tab.c	/^struct cbb_gen_s *cur_gen;$/;"	v	typeref:struct:cbb_gen_s
cur_kw	bitbake.tab.c	/^struct cbb_kw_s *cur_kw;$/;"	v	typeref:struct:cbb_kw_s
data	parser_types.h	/^	void *data;$/;"	m	struct:cbb_gen_s
desc	args.c	/^static char *desc = "A C implementation of bitbake\\n";$/;"	v	file:
double_quote	parser_types.h	/^	double_quote$/;"	e	enum:quote_type
export	parser_types.h	/^	gboolean export;$/;"	m	struct:cbb_conf_s
expr	parser_types.h	/^	gchar *expr;$/;"	m	struct:cbb_block_s
filename	bitbake.tab.c	/^gchar *filename;$/;"	v
filename	parser_types.h	/^	gchar *filename;$/;"	m	struct:cbb_gen_s
files_read_file	files.c	/^int files_read_file(const char *filename,$/;"	f
flag	parser_types.h	/^	gchar *flag;$/;"	m	struct:cbb_conf_s
flex_int16_t	lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
hashtable	bitbake.tab.c	/^	GHashTable *hashtable;$/;"	m	union:YYSTYPE	file:
hashtable	bitbake.tab.h	/^	GHashTable *hashtable;$/;"	m	union:YYSTYPE
include	parser_types.h	/^	include = 0,$/;"	e	enum:kw_type
inherit	parser_types.h	/^	inherit,$/;"	e	enum:kw_type
ival	bitbake.tab.c	/^	int ival;$/;"	m	union:YYSTYPE	file:
ival	bitbake.tab.h	/^	int ival;$/;"	m	union:YYSTYPE
key	parser_types.h	/^	gchar *key;$/;"	m	struct:cbb_conf_s
kw	parser_types.h	/^	kw,$/;"	e	enum:parser_type
kw_expr	bitbake.y	/^kw_expr:$/;"	l
kw_keyword	bitbake.y	/^kw_keyword:$/;"	l
kw_keyword_itoa	utils.c	/^gchar* kw_keyword_itoa(gint keyword) {$/;"	f
kw_set	utils.c	/^void kw_set(gint keyword, const gchar *val) {$/;"	f
kw_stmt	bitbake.y	/^kw_stmt:$/;"	l
kw_type	parser_types.h	/^enum kw_type {$/;"	g
lazyques_assign	parser_types.h	/^	lazyques_assign,$/;"	e	enum:assign_op
lineno	parser_types.h	/^	gint lineno;$/;"	m	struct:cbb_gen_s
list	bitbake.tab.c	/^	GList *list;$/;"	m	union:YYSTYPE	file:
list	bitbake.tab.h	/^	GList *list;$/;"	m	union:YYSTYPE
main	bitbake.tab.c	/^int main(int argc, char **argv) {$/;"	f
name	parser_types.h	/^	gchar *name;$/;"	m	struct:cbb_block_s
new	utils2.c	/^GHashTable* new(enum parser_type type) {$/;"	f
op	parser_types.h	/^	enum assign_op op;$/;"	m	struct:cbb_conf_s	typeref:enum:cbb_conf_s::assign_op
options	args.c	/^static struct argp_option options[] = {$/;"	v	typeref:struct:argp_option	file:
parse_file	bitbake.tab.c	/^void parse_file(const gchar *fn) {$/;"	f
parse_tree	bitbake.tab.c	/^GHashTable *parse_tree;$/;"	v
parser_type	parser_types.h	/^enum parser_type {$/;"	g
postdot_assign	parser_types.h	/^	postdot_assign,$/;"	e	enum:assign_op
predot_assign	parser_types.h	/^	predot_assign = 0,$/;"	e	enum:assign_op
prepend_assign	parser_types.h	/^	prepend_assign,$/;"	e	enum:assign_op
python	parser_types.h	/^	gboolean python;$/;"	m	struct:cbb_block_s
ques_assign	parser_types.h	/^	ques_assign,$/;"	e	enum:assign_op
quote	bitbake.y	/^quote:$/;"	l
quote	parser_types.h	/^	enum quote_type quote;$/;"	m	struct:cbb_conf_s	typeref:enum:cbb_conf_s::quote_type
quote_type	parser_types.h	/^enum quote_type {$/;"	g
recipe	bitbake.y	/^recipe:$/;"	l
require	parser_types.h	/^	require$/;"	e	enum:kw_type
row_num	lex.yy.c	/^gint row_num = 0;$/;"	v
short	bitbake.tab.c	183;"	d	file:
single_quote	parser_types.h	/^	single_quote = 0,$/;"	e	enum:quote_type
statement	bitbake.y	/^statement:$/;"	l
statements	bitbake.y	/^statements:$/;"	l
sval	bitbake.tab.c	/^	char *sval;$/;"	m	union:YYSTYPE	file:
sval	bitbake.tab.h	/^	char *sval;$/;"	m	union:YYSTYPE
type	parser_types.h	/^	enum kw_type type;$/;"	m	struct:cbb_kw_s	typeref:enum:cbb_kw_s::kw_type
type	parser_types.h	/^	enum parser_type type;$/;"	m	struct:cbb_gen_s	typeref:enum:cbb_gen_s::parser_type
unput	lex.yy.c	245;"	d	file:
val	parser_types.h	/^	gchar *val;$/;"	m	struct:cbb_conf_s
val	parser_types.h	/^	gchar *val;$/;"	m	struct:cbb_kw_s
yy_accept	lex.yy.c	/^static const flex_int16_t yy_accept[84] =$/;"	v	file:
yy_at_bol	lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	lex.yy.c	/^static const flex_int16_t yy_base[93] =$/;"	v	file:
yy_bs_column	lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	lex.yy.c	/^	int yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = NULL; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	lex.yy.c	/^static char *yy_c_buf_p = NULL;$/;"	v	file:
yy_ch_buf	lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	lex.yy.c	/^static const flex_int16_t yy_chk[231] =$/;"	v	file:
yy_create_buffer	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	lex.yy.c	/^static const flex_int16_t yy_def[93] =$/;"	v	file:
yy_delete_buffer	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	lex.yy.c	/^static const YY_CHAR yy_ec[256] =$/;"	v	file:
yy_fatal_error	lex.yy.c	/^static void yynoreturn yy_fatal_error (const char* msg )$/;"	f	file:
yy_fill_buffer	lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	lex.yy.c	/^int yy_flex_debug = 1;$/;"	v
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen (const char * s )$/;"	f	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	f	file:
yy_flush_buffer	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	lex.yy.c	/^static const YY_CHAR yy_meta[31] =$/;"	v	file:
yy_n_chars	lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	lex.yy.c	389;"	d	file:
yy_nxt	lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	lex.yy.c	/^static const flex_int16_t yy_nxt[231] =$/;"	v	file:
yy_reduce_print	bitbake.tab.c	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_rule_can_match_eol	lex.yy.c	/^static const flex_int32_t yy_rule_can_match_eol[27] =$/;"	v	file:
yy_rule_linenum	lex.yy.c	/^static const flex_int16_t yy_rule_linenum[26] =$/;"	v	file:
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	f
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (const char * yystr )$/;"	f
yy_set_bol	lex.yy.c	399;"	d	file:
yy_set_interactive	lex.yy.c	390;"	d	file:
yy_size_t	lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	bitbake.tab.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	bitbake.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	bitbake.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	bitbake.tab.c	/^union yyalloc$/;"	u	file:
yyalloc	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yychar	bitbake.tab.c	/^int yychar;$/;"	v
yycheck	bitbake.tab.c	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yyclearin	bitbake.tab.c	624;"	d	file:
yyconst	lex.yy.c	125;"	d	file:
yydebug	bitbake.tab.c	/^int yydebug;$/;"	v
yydefact	bitbake.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	bitbake.tab.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	bitbake.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	bitbake.tab.c	623;"	d	file:
yyerror	bitbake.tab.c	/^void yyerror(const char *error_str) {$/;"	f
yyfree	lex.yy.c	/^void yyfree (void * ptr )$/;"	f
yyget_debug	lex.yy.c	/^int yyget_debug  (void)$/;"	f
yyget_in	lex.yy.c	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	lex.yy.c	/^int yyget_leng  (void)$/;"	f
yyget_lineno	lex.yy.c	/^int yyget_lineno  (void)$/;"	f
yyget_out	lex.yy.c	/^FILE *yyget_out  (void)$/;"	f
yyget_text	lex.yy.c	/^char *yyget_text  (void)$/;"	f
yyin	lex.yy.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v
yyinput	lex.yy.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	lex.yy.c	/^int yyleng;$/;"	v
yyless	lex.yy.c	2098;"	d	file:
yyless	lex.yy.c	2099;"	d	file:
yyless	lex.yy.c	233;"	d	file:
yylex_destroy	lex.yy.c	/^int yylex_destroy  (void)$/;"	f
yylineno	lex.yy.c	/^int yylineno = 1;$/;"	v
yylval	bitbake.tab.c	/^YYSTYPE yylval;$/;"	v
yymore	lex.yy.c	627;"	d	file:
yynerrs	bitbake.tab.c	/^int yynerrs;$/;"	v
yynoreturn	lex.yy.c	128;"	d	file:
yynoreturn	lex.yy.c	130;"	d	file:
yyout	lex.yy.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v
yypact	bitbake.tab.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypact_value_is_default	bitbake.tab.c	515;"	d	file:
yyparse	bitbake.tab.c	/^yyparse (void)$/;"	f
yypgoto	bitbake.tab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state (void)$/;"	f
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	bitbake.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	bitbake.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrline	bitbake.tab.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyset_debug	lex.yy.c	/^void yyset_debug (int  _bdebug )$/;"	f
yyset_in	lex.yy.c	/^void yyset_in (FILE *  _in_str )$/;"	f
yyset_lineno	lex.yy.c	/^void yyset_lineno (int  _line_number )$/;"	f
yyset_out	lex.yy.c	/^void yyset_out (FILE *  _out_str )$/;"	f
yyss_alloc	bitbake.tab.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	bitbake.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	bitbake.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	bitbake.tab.c	825;"	d	file:
yystrlen	bitbake.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	bitbake.tab.c	809;"	d	file:
yysyntax_error	bitbake.tab.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	bitbake.tab.c	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yytable_value_is_error	bitbake.tab.c	520;"	d	file:
yyterminate	lex.yy.c	822;"	d	file:
yytext	lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	lex.yy.c	428;"	d	file:
yytext_ptr	lex.yy.c	430;"	d	file:
yytname	bitbake.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	bitbake.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	bitbake.tab.c	/^  enum yytokentype$/;"	g	file:
yytokentype	bitbake.tab.h	/^  enum yytokentype$/;"	g
yytoknum	bitbake.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	bitbake.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	bitbake.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	bitbake.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	bitbake.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	bitbake.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	bitbake.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	bitbake.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	bitbake.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	bitbake.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	lex.yy.c	/^    static void yyunput (int c, char * yy_bp )$/;"	f	file:
yyvs_alloc	bitbake.tab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywrap	lex.yy.c	413;"	d	file:
